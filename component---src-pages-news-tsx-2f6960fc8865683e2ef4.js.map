{"version":3,"file":"component---src-pages-news-tsx-2f6960fc8865683e2ef4.js","mappings":"4HA6CA,IAzCoBA,IAAgE,IAA/D,UAAEC,EAAS,UAAEC,EAAS,YAAEC,EAAW,mBAAEC,GAAoBJ,EAE5E,MAAMK,EAAWD,QAAAA,EAAsB,gBACvC,OACEE,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAACE,EAAAA,EAAS,CAACC,OAAK,GACdH,EAAAA,cAAA,OAAKC,UAAU,uBAAuBG,MAAO,CAAEC,gBAAgB,OAAQT,EAAS,IAAKE,mBAAoBC,IACvGC,EAAAA,cAACE,EAAAA,EAAS,CAACC,OAAK,EAACF,UAAU,oBAEvBJ,EACEG,EAAAA,cAACE,EAAAA,EAAS,KACRF,EAAAA,cAAA,OAAKC,UAAU,SACbD,EAAAA,cAAA,UAAKL,KAIT,OAMLE,EAQC,KAPAG,EAAAA,cAACE,EAAAA,EAAS,CAACD,UAAU,iBACnBD,EAAAA,cAAA,OAAKC,UAAU,SACbD,EAAAA,cAAA,UAAKL,GACLK,EAAAA,cAAA,MAAIC,UAAU,wBAQpB,C,iHCvBV,MAAMK,EAAcZ,IAAA,IAAC,QAAEa,GAASb,EAAA,OAC9BM,EAAAA,cAACQ,EAAAA,KAAI,CAACC,GAAE,SAAWF,EAAQG,KAAQT,UAAU,iBAC3CD,EAAAA,cAACW,EAAAA,EAAG,CAACV,UAAU,eACbD,EAAAA,cAACY,EAAAA,EAAG,CAACC,GAAG,KACLN,EAAQO,YACPd,EAAAA,cAAA,OAAKe,IAAK,oEACVC,IAAKT,EAAQU,QAIbjB,EAAAA,cAAA,SAAG,aAAWkB,KAAKC,UAAUZ,KAGjCP,EAAAA,cAACY,EAAAA,EAAG,CAACC,GAAG,IAAIO,GAAG,MACbpB,EAAAA,cAAA,QAAMC,UAAU,mBAAmBM,EAAQc,UAC3CrB,EAAAA,cAAA,UAAKO,EAAQU,OACbjB,EAAAA,cAAA,QAAMC,UAAU,eAAeM,EAAQe,MACvCtB,EAAAA,cAAA,OACEC,UAAU,cACVsB,wBAAyB,CAAEC,OAAQjB,EAAQkB,UAI5C,EA8CT,UA3CiBC,IACf1B,EAAAA,cAAC2B,EAAAA,YAAW,CACVC,MAAK,YA0BLC,OAAQC,GACN9B,EAAAA,cAAC+B,EAAAA,EAAM,CAACC,SAAU,CAAEC,SAAU,SAC5BjC,EAAAA,cAACkC,EAAAA,EAAW,CAACvC,UAAS,OAAUC,UAAWuC,EAAAA,IAC3CnC,EAAAA,cAACE,EAAAA,EAAS,CAACC,OAAK,GACdH,EAAAA,cAACE,EAAAA,EAAS,CAACD,UAAU,UAAUmC,GAAG,QAC/BN,EAAKO,kBAAkBC,MAAMC,KAAIC,GAChCxC,EAAAA,cAACM,EAAW,CAACmC,IAAKD,EAAKE,YAAYN,GAAI7B,QAASiC,EAAKE,oB,uBC3EnE,IAAe,IAA0B,mD","sources":["webpack://vb-art/./src/components/pageHeading.tsx","webpack://vb-art/./src/pages/news.tsx","webpack://vb-art/./src/assets/images/pageHeadings/about.jpg"],"sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Container } from \"react-bootstrap\"\r\nimport \"./../styles/components/pageHeading.scss\"\r\n\r\nconst PageHeading = ({ pageTitle, pageImage, titleInline, backgroundPosition }) => {\r\n\r\n  const position = backgroundPosition ?? \"center bottom\";\r\n  return (\r\n    <div className=\"heading\">\r\n      <Container fluid>\r\n        <div className=\"page-image-container\" style={{ backgroundImage: `url(${pageImage})`, backgroundPosition: position }}>\r\n          <Container fluid className=\"title-background\">\r\n            {\r\n              titleInline ?\r\n                <Container>\r\n                  <div className=\"title\">\r\n                    <h1>{pageTitle}</h1>\r\n                  </div>\r\n                </Container>\r\n                :\r\n                null\r\n            }\r\n\r\n          </Container>\r\n        </div>\r\n        {\r\n          !titleInline ?\r\n            <Container className=\"title-outside\">\r\n              <div className=\"title\">\r\n                <h1>{pageTitle}</h1>\r\n                <hr className=\"title-break-left\" />\r\n              </div>\r\n            </Container>\r\n            :\r\n            null\r\n        }\r\n\r\n      </Container>\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n}\r\n\r\nexport default PageHeading\r\n","import React from \"react\"\r\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport { Row, Col, Container } from \"react-bootstrap\"\r\nimport { Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nimport PageHeading from \"../components/pageHeading\"\r\n\r\n\r\n\r\nimport aboutImage from \"../assets/images/pageHeadings/about.jpg\";\r\n\r\n\r\nconst NewsPreview = ({ article }) => (\r\n  <Link to={`/news/${article.slug}`} className=\"link-no-style\">\r\n    <Row className=\"newsPreview\">\r\n      <Col md=\"3\">\r\n        {article.title_image ? (\r\n          <img src= \"../../assets/artwork/images_watermarked/black-and-white/coast.jpg\"//{article.title_image}\r\n          alt={article.title}\r\n        />\r\n\r\n        ) : (\r\n          <p>No image: {JSON.stringify(article)}</p>\r\n        )}\r\n      </Col>\r\n      <Col md=\"9\" sm=\"12\">\r\n        <span className=\"articleCategory\">{article.category}</span>\r\n        <h3>{article.title}</h3>\r\n        <span className=\"articleDate\">{article.date}</span>\r\n        <div\r\n          className=\"previewText\"\r\n          dangerouslySetInnerHTML={{ __html: article.html }}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  </Link>\r\n)\r\n\r\nconst NewsPage = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n    query GetNewsQuery {\r\n      allMarkdownRemark(\r\n        filter: {fileAbsolutePath: {regex: \"/news/\"}}\r\n        sort: {frontmatter: {id: ASC}}\r\n      ) {\r\n        nodes {\r\n          frontmatter {\r\n            id\r\n            date\r\n            title\r\n            category\r\n            title_image\r\n          }\r\n          html\r\n        }\r\n        edges {\r\n          node {\r\n            fields {\r\n              slug\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    `}\r\n    render={data => (\r\n      <Layout pageInfo={{ pageName: \"News\" }}>\r\n        <PageHeading pageTitle={`News`} pageImage={aboutImage} />\r\n        <Container fluid>\r\n          <Container className=\"content\" id=\"news\">\r\n            {data.allMarkdownRemark.nodes.map(node => (\r\n              <NewsPreview key={node.frontmatter.id} article={node.frontmatter} />\r\n            ))}\r\n          </Container>\r\n        </Container>\r\n      </Layout>\r\n    )}\r\n  />\r\n)\r\n\r\nexport default NewsPage\r\n","export default __webpack_public_path__ + \"static/about-59fab9105d6c0a0270949468e8217c09.jpg\";"],"names":["_ref","pageTitle","pageImage","titleInline","backgroundPosition","position","React","className","Container","fluid","style","backgroundImage","NewsPreview","article","Link","to","slug","Row","Col","md","title_image","src","alt","title","JSON","stringify","sm","category","date","dangerouslySetInnerHTML","__html","html","NewsPage","StaticQuery","query","render","data","Layout","pageInfo","pageName","PageHeading","aboutImage","id","allMarkdownRemark","nodes","map","node","key","frontmatter"],"sourceRoot":""}