{"version":3,"file":"component---src-pages-contact-tsx-5ddc58922ee5b0d84788.js","mappings":"4HA6CA,IAzCoBA,IAAgE,IAA/D,UAAEC,EAAS,UAAEC,EAAS,YAAEC,EAAW,mBAAEC,GAAoBJ,EAE5E,MAAMK,EAAWD,QAAAA,EAAsB,gBACvC,OACEE,EAAAA,cAAA,OAAKC,UAAU,WACbD,EAAAA,cAACE,EAAAA,EAAS,CAACC,OAAK,GACdH,EAAAA,cAAA,OAAKC,UAAU,uBAAuBG,MAAO,CAAEC,gBAAgB,OAAQT,EAAS,IAAKE,mBAAoBC,IACvGC,EAAAA,cAACE,EAAAA,EAAS,CAACC,OAAK,EAACF,UAAU,oBAEvBJ,EACEG,EAAAA,cAACE,EAAAA,EAAS,KACRF,EAAAA,cAAA,OAAKC,UAAU,SACbD,EAAAA,cAAA,UAAKL,KAIT,OAMLE,EAQC,KAPAG,EAAAA,cAACE,EAAAA,EAAS,CAACD,UAAU,iBACnBD,EAAAA,cAAA,OAAKC,UAAU,SACbD,EAAAA,cAAA,UAAKL,GACLK,EAAAA,cAAA,MAAIC,UAAU,wBAQpB,C,yHClCV,I,oBCuNA,MAhCoBP,IAAe,IAAd,MAAEY,GAAOZ,EAE5B,OACEM,EAAAA,cAACO,EAAAA,EAAM,CAACC,SAAU,CAAEC,SAAU,YAC5BT,EAAAA,cAACU,EAAAA,EAAW,CACVf,UAAS,UACTC,UAAWe,EAAAA,IAEbX,EAAAA,cAACE,EAAAA,EAAS,CAACC,OAAK,EAACF,UAAU,gBACzBD,EAAAA,cAACE,EAAAA,EAAS,KACRF,EAAAA,cAACY,EAAAA,EAAG,KACFZ,EAAAA,cAACa,EAAAA,EAAG,CAACZ,UAAU,WAEbD,EAAAA,cAAA,MAAIC,UAAU,YAAW,wCACzBD,EAAAA,cAAA,SAAG,sEAEHA,EAAAA,cAAA,SAAG,sBAAmBA,EAAAA,cAAA,WACpBA,EAAAA,cAAA,SAAG,uBAELA,EAAAA,cAAA,SAAG,mDASH,C,uBCvNd,IAAe,IAA0B,mD","sources":["webpack://vb-art/./src/components/pageHeading.tsx","webpack://vb-art/./node_modules/emailjs-com/es/index.js","webpack://vb-art/./src/pages/contact.tsx","webpack://vb-art/./src/assets/images/pageHeadings/about.jpg"],"sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Container } from \"react-bootstrap\"\r\nimport \"./../styles/components/pageHeading.scss\"\r\n\r\nconst PageHeading = ({ pageTitle, pageImage, titleInline, backgroundPosition }) => {\r\n\r\n  const position = backgroundPosition ?? \"center bottom\";\r\n  return (\r\n    <div className=\"heading\">\r\n      <Container fluid>\r\n        <div className=\"page-image-container\" style={{ backgroundImage: `url(${pageImage})`, backgroundPosition: position }}>\r\n          <Container fluid className=\"title-background\">\r\n            {\r\n              titleInline ?\r\n                <Container>\r\n                  <div className=\"title\">\r\n                    <h1>{pageTitle}</h1>\r\n                  </div>\r\n                </Container>\r\n                :\r\n                null\r\n            }\r\n\r\n          </Container>\r\n        </div>\r\n        {\r\n          !titleInline ?\r\n            <Container className=\"title-outside\">\r\n              <div className=\"title\">\r\n                <h1>{pageTitle}</h1>\r\n                <hr className=\"title-break-left\" />\r\n              </div>\r\n            </Container>\r\n            :\r\n            null\r\n        }\r\n\r\n      </Container>\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n}\r\n\r\nexport default PageHeading\r\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import React, { useState } from \"react\"\r\nimport { Row, Col, Container, Button, Form, Alert, FormFloating } from \"react-bootstrap\"\r\nimport Layout from \"../components/layout\"\r\nimport emailjs from 'emailjs-com'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nimport PageHeading from \"../components/pageHeading\"\r\nimport aboutImage from \"../assets/images/pageHeadings/about.jpg\";\r\n\r\n\r\nexport interface FormFields {\r\n  name: string;\r\n  email: string;\r\n  message: string;\r\n}\r\n\r\n\r\nconst ContactForm = () => {\r\n  const [values, setValues] = useState<FormFields>({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\"\r\n  });\r\n  const [formerrors, setFormErrors] = useState<FormFields | undefined>();\r\n  const [showMessage, setShowMessage] = useState<string>(\"\");\r\n  let [loading, setLoading] = useState(false);\r\n\r\n  const serviceId = process.env.EMAILJS_SERVICE_ID;\r\n  const templateId = process.env.EMAILJS_TEMPLATE_ID;\r\n  const userId = process.env.EMAILJS_USER_ID;\r\n\r\n  const handleChange = (event) => {\r\n    //this console.log message should be removed once you've tested the event works \r\n    // console.log(\r\n    //   \"handleChange -> \" + event.target.name + \" : \" + event.target.value\r\n    // );\r\n    //this is the important bit\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const validate = (values) => {\r\n    let errors: any = {};\r\n\r\n    //name field\r\n    if (!values.name) {\r\n      errors[\"name\"] = \"Full name is required\";\r\n    }\r\n\r\n    //email field\r\n    if (!values.email) {\r\n      errors[\"email\"] = \"Email address is required\";\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n      errors.email = \"Email address is invalid\";\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    // console.log(errors)\r\n\r\n    if (Object.keys(errors).length === 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const sendConfirmationMail = (reply_to: string, to_name: string, message: string) => {\r\n    // console.log(\"In sendConfirmationMail\")\r\n    const templateParams = {\r\n      reply_to: reply_to,\r\n      to_name: to_name,\r\n      message: message,\r\n    };\r\n    emailjs.send(serviceId, process.env.EMAILJS_CONFIRMATION_TEMPLATE_ID, templateParams, userId)\r\n      .then(response => {\r\n        // console.log(\"Confirmation mail sent successfully!\", response)\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error sending confirmation email:\", error)\r\n      });\r\n  }\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n    if (validate(values)) {\r\n      // console.log(\"Validation successful\")\r\n      const templateParams = {\r\n        from_name: values.name,\r\n        from_email: values.email,\r\n        message: values.message,\r\n      };\r\n\r\n      emailjs.send(serviceId, templateId, templateParams, userId)\r\n        .then(response => {\r\n          //console.log(\"Email sent successfully!\", response)\r\n          setLoading(false);\r\n          setShowMessage(\"Thank you for your message, we will be in touch in no time!\");\r\n\r\n          sendConfirmationMail(values.email, values.name, values.message);\r\n          setValues({\r\n            name: \"\",\r\n            email: \"\",\r\n            message: \"\"\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error sending email:\", error)\r\n          setShowMessage(\"Error sending contact form. Please try again later or manually contact me via <a href='mailto:contact@vb-art.com'>contact@vb-art.com</a>\");\r\n        });\r\n    }\r\n  }\r\n  return (\r\n\r\n    <Form id=\"contactForm\" onSubmit={handleFormSubmit}>\r\n      <Form.Group controlId=\"formGridName\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Your Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {formerrors?.name && (\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            {formerrors.name}\r\n          </div>\r\n        )}\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Col} controlId=\"formGridEmail\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Your Email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {formerrors?.email && (\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            {formerrors.email}\r\n          </div>\r\n        )}\r\n      </Form.Group>\r\n      <Form.Group as={Col} controlId=\"formGridMessage\">\r\n        <Form.Label>Message</Form.Label>\r\n        <Form.Control as=\"textarea\" name=\"message\" rows={3}\r\n          value={values.message}\r\n          onChange={handleChange}\r\n          required\r\n          placeholder=\"Your message\" />\r\n        {formerrors?.message && (\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            {formerrors.message}\r\n          </div>\r\n        )}\r\n      </Form.Group>\r\n      <div className=\"formButtonRow\">\r\n        <Button type=\"submit\" variant=\"primary\" size=\"lg\">\r\n          Submit\r\n        </Button>\r\n        <ClipLoader\r\n          color={\"#818844\"} //primary-green\r\n          loading={loading}\r\n          // cssOverride={override}\r\n          size={50}\r\n          aria-label=\"Loading Spinner\"\r\n          data-testid=\"loader\"\r\n        />\r\n      </div>\r\n\r\n      {\r\n        showMessage && <span className=\"formMessage\">{showMessage}</span>\r\n      }\r\n    </Form>\r\n  );\r\n\r\n}\r\n\r\n\r\nconst ContactPage = ({ props }) => {\r\n\r\n  return (\r\n    <Layout pageInfo={{ pageName: \"Contact\" }}>\r\n      <PageHeading\r\n        pageTitle={`Contact`}\r\n        pageImage={aboutImage}\r\n      />\r\n      <Container fluid className=\"marginBottom\">\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"col-12 \">\r\n              {/* <Col className=\"col-12 col-lg-4 \"> */}\r\n              <h2 className=\"cite-big\">Inquiries, questions, inspiration..?</h2>\r\n              <p>I am happy about your interest in my work and about contacting me!</p>\r\n\r\n              <p>My email adress is <br></br>\r\n                <b>contact@vb-art.com</b></p>\r\n\r\n              <p>I will get back to you as soon as possible.</p>\r\n              {/* <p><i>I am a fan of data minimisation: Your information is only used to send me an e-mail. Your data will not be saved!</i></p>*/}\r\n            </Col>\r\n            {/* <Col className=\"col-lg-7 offset-lg-1 col-12\">\r\n              <ContactForm />\r\n            </Col> */}\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    </Layout >\r\n  )\r\n};\r\n\r\nexport default ContactPage;\r\n","export default __webpack_public_path__ + \"static/about-59fab9105d6c0a0270949468e8217c09.jpg\";"],"names":["_ref","pageTitle","pageImage","titleInline","backgroundPosition","position","React","className","Container","fluid","style","backgroundImage","props","Layout","pageInfo","pageName","PageHeading","aboutImage","Row","Col"],"sourceRoot":""}